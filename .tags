!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CLIMACELL_API_KEY	optime/instance/config.py	/^CLIMACELL_API_KEY = 'XbleX8NlE0oIrxx4vepJHBtOdD42GIeH'$/;"	v
DEBUG	optime/instance/config.py	/^DEBUG = True  # Permit use of Flask's debugging features$/;"	v
Introduction	Report.tex	/^\\end{abstract}$/;"	s
SECRET_KEY	optime/instance/config.py	/^SECRET_KEY = '\\xe0\\xcd\\xb0\\xe0A\\xa1\\xf9\\x91\\xdb\\xd4\\xc4a\\x1d$\\x84'$/;"	v
STORES	optime/store_filter.py	/^STORES = Stores()$/;"	v
Stores	optime/places.py	/^class Stores:$/;"	c
WEATHER	optime/scheduling.py	/^WEATHER = Weather()$/;"	v
WEATHER_VALS	optime/scheduling.py	/^WEATHER_VALS = {}$/;"	v
Weather	optime/climacell.py	/^class Weather:$/;"	c
__init__	optime/climacell.py	/^    def __init__(self):$/;"	m	class:Weather
__init__	optime/places.py	/^    def __init__(self):$/;"	m	class:Stores
add	storeaccessors.py	/^def add(store, item, count, latitude, longitude, ID = None):$/;"	f
api_key	optime/climacell.py	/^    api_key = config.CLIMACELL_API_KEY$/;"	v	class:Weather
api_key	optime/places.py	/^    api_key = config.GOOGLE_API_KEY$/;"	v	class:Stores
app	optime/app.py	/^app = Flask(__name__, static_url_path='\/static')  # pylint: disable=C0103$/;"	v
base_url	optime/climacell.py	/^    base_url = "https:\/\/api.climacell.co\/v3"$/;"	v	class:Weather
base_url	optime/places.py	/^    base_url = 'https:\/\/maps.googleapis.com\/maps\/api\/place'$/;"	v	class:Stores
clean_case_data	optime/store_filter.py	/^def clean_case_data(raw_json):$/;"	f
clean_daily	optime/scheduling.py	/^def clean_daily(dictionary):$/;"	f
clean_data	optime/scheduling.py	/^def clean_data(dictionary):$/;"	f
clean_store_data	optime/store_filter.py	/^def clean_store_data(raw_json):$/;"	f
client	optime/receipt.py	/^client = vision.ImageAnnotatorClient()$/;"	v
daily	optime/app.py	/^def daily():$/;"	f
dailyStr	optime/static/js/getLocation.js	/^var dailyStr = dailyLimit.getFullYear() + '-' + ('0' + (dailyLimit.getMonth()+1)).slice(-2) + '-' + ('0' + dailyLimit.getDate()).slice(-2);$/;"	v
daily_end	optime/climacell.py	/^    daily_end = 15*24*60*60$/;"	v	class:Weather
find_place	optime/places.py	/^    def find_place(self, input, lat, long, radius, inputtype="textquery"):$/;"	m	class:Stores
forecast	optime/app.py	/^def forecast():$/;"	f
get_case_data	optime/store_filter.py	/^def get_case_data(county):$/;"	f
get_daily	optime/climacell.py	/^    def get_daily(self, lat, lon, unit_system, fields, # pylint: disable=R0913$/;"	m	class:Weather
get_db	optime/app.py	/^def get_db():$/;"	f
get_details	optime/places.py	/^    def get_details(self, place_id):$/;"	m	class:Stores
get_hourly	optime/climacell.py	/^    def get_hourly(self, lat, lon, unit_system, fields, # pylint: disable=R0913$/;"	m	class:Weather
get_nowcast	optime/climacell.py	/^    def get_nowcast(self, lat, lon, timestep, unit_system, fields, # pylint: disable=R0913$/;"	m	class:Weather
get_realtime	optime/climacell.py	/^    def get_realtime(self, lat, lon, unit_system, fields):$/;"	m	class:Weather
get_store_data	optime/store_filter.py	/^def get_store_data(place_id):$/;"	f
hourly	optime/app.py	/^def hourly():$/;"	f
hourly_end	optime/climacell.py	/^    hourly_end = 96*60*60$/;"	v	class:Weather
index	optime/app.py	/^def index():$/;"	f
load_logged_in_user	optime/app.py	/^def load_logged_in_user():$/;"	f
login	optime/app.py	/^def login():$/;"	f
login_required	optime/app.py	/^def login_required(view):$/;"	f
logout	optime/app.py	/^def logout():$/;"	f
mycursor	storeaccessors.py	/^mycursor = mydb.cursor()$/;"	v
mydb	storeaccessors.py	/^mydb = mysql.connector.connect(host=f"localhost", user=f"root",$/;"	v
nowcast	optime/app.py	/^def nowcast():$/;"	f
nowcast_end	optime/climacell.py	/^    nowcast_end = 6*60*60$/;"	v	class:Weather
parse_receipt	optime/receipt.py	/^def parse_receipt(image_file_path):$/;"	f
register	optime/app.py	/^def register():$/;"	f
schedule	optime/scheduling.py	/^def schedule(lat, lon, start_time, end_time, duration):$/;"	f
schedule_time	optime/app.py	/^def schedule_time():$/;"	f
scheduling	optime/app.py	/^def scheduling():$/;"	f
search	optime/corona.py	/^search = SearchEngine(simple_zipcode=True)$/;"	v
shopping	optime/app.py	/^def shopping():$/;"	f
showPosition	optime/static/js/getLocation.js	/^function showPosition(position) {$/;"	f
stores	optime/corona.py	/^stores = {}$/;"	v
stores	optime/places.py	/^stores = ["Safeway", "Walmart", "Sprouts", "Trader Joes"]$/;"	v
tasks	optime/app.py	/^def tasks():$/;"	f
weather	optime/app.py	/^weather = climacell.Weather()$/;"	v
window_slider	optime/scheduling.py	/^def window_slider(lat, lon, start_time, end_time, duration,$/;"	f
wrapped_view	optime/app.py	/^    def wrapped_view(**kwargs):$/;"	f	function:login_required
x	optime/static/js/getLocation.js	/^var x = document.getElementById("demo");$/;"	v
